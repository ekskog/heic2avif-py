name: Build & Deploy HEIC2AVIF Converter

on:
  push:
    branches: [ main, master, dev ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: Set Environment Variables
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "IMAGE_NAME=ghcr.io/ekskog/heic2avif-py" >> $GITHUB_ENV

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.EKPAT_TOKEN }}

      - name: 🏗️ Build and Push
        run: |
          IMAGE_TAG=${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
          echo "Building and pushing: $IMAGE_TAG"
          docker buildx build \
            --platform linux/amd64 \
            --tag $IMAGE_TAG \
            --tag ${{ env.IMAGE_NAME }}:latest \
            --push \
            --progress=plain \
            .

      - name: ✅ Verify Image Push
        run: |
          IMAGE_TAG=${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
          echo "Verifying image exists: $IMAGE_TAG"
          docker manifest inspect $IMAGE_TAG

      - name: ⚙️ Set Up KUBECONFIG
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
          echo "KUBECONFIG=$PWD/kubeconfig.yaml" >> $GITHUB_ENV
          echo "KUBECONFIG set to $PWD/kubeconfig.yaml"
          echo "Kubeconfig file size: $(wc -c < kubeconfig.yaml) bytes"
          if [ ! -s kubeconfig.yaml ]; then
            echo "ERROR: kubeconfig.yaml is empty!"
            exit 1
          fi

      - name: 🚀 Deploy to Kubernetes
        run: |
          IMAGE_TAG=${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
          echo "🚀 Deploying HEIC2AVIF converter: $IMAGE_TAG"
          
          # Update the deployment YAML with the current image tag
          sed -i "s|image: ghcr.io/ekskog/heic2avif-py:.*|image: $IMAGE_TAG|g" k8s/heic2avif-py-deployment.yaml
          
          # Apply the updated deployment YAML
          kubectl apply -f k8s/heic2avif-py-deployment.yaml --kubeconfig=kubeconfig.yaml --namespace=webapps
          kubectl apply -f k8s/heic2avif-py-configmap.yaml --kubeconfig=kubeconfig.yaml --namespace=webapps
          
          # Wait for rollout to complete
          kubectl rollout status deployment/heic2avif-py-deployment --kubeconfig=kubeconfig.yaml --namespace=webapps --timeout=300s
          
          echo "✅ HEIC2AVIF converter deployment completed successfully"
